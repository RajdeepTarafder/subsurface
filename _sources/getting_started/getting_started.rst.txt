
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "getting_started/getting_started.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_getting_started_getting_started.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_getting_started_getting_started.py:


Getting started
===============

.. GENERATED FROM PYTHON SOURCE LINES 7-19

Authors: Miguel de la Varga and Alexander Juestel

This example how to read into subsurface structures a bunch of different
data such as:

- well data -> from csv all in one single file

- topography -> from tif

- Cross sections with textures from trace -> shp, png

- Exported gempy model from netcdf

.. GENERATED FROM PYTHON SOURCE LINES 22-27

.. code-block:: python3

    import shutil
    import pandas as pd
    import subsurface as ss
    import pooch








.. GENERATED FROM PYTHON SOURCE LINES 28-32

Read wells:
-----------
We can read well data - using welly as backend. First we need to have the
data in the right format for digesting.

.. GENERATED FROM PYTHON SOURCE LINES 34-60

.. code-block:: python3


    # Pulling data example
    model_file = pooch.retrieve(
        url="https://github.com/cgre-aachen/gempy_data/raw/master/"
            "data/subsurface/example1.zip",
        known_hash=None
    )

    data_path = model_file[:-4]
    shutil.unpack_archive(model_file, extract_dir=model_file[:-4])

    # Read original file
    ori_wells = pd.read_csv(data_path + '/wells.csv')

    # Add top and base columns
    wells_fixed = ss.io.wells.add_tops_from_base_and_altitude_in_place(
        ori_wells,
        'Index',
        'Z',
        'Altitude'
    )

    wells_fixed['md'] = wells_fixed['top']
    wells_fixed.to_csv(data_path + '/wells.csv')
    wells_fixed





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Downloading data from 'https://github.com/cgre-aachen/gempy_data/raw/master/data/subsurface/example1.zip' to file '/home/runner/.cache/pooch/2ff36b994aa925b842ddd264256335a9-example1.zip'.
    SHA256 hash of downloaded file: fb79a63eeb874cf0cdca557106c62c67eace23811db5935e57c3448fed7f8978
    Use this value as the 'known_hash' argument of 'pooch.retrieve' to ensure that the file hasn't changed if it is downloaded again in the future.
    /opt/hostedtoolcache/Python/3.7.9/x64/lib/python3.7/site-packages/pandas/core/indexing.py:966: SettingWithCopyWarning: 
    A value is trying to be set on a copy of a slice from a DataFrame.
    Try using .loc[row_indexer,col_indexer] = value instead

    See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
      self.obj[item] = s
    /home/runner/work/subsurface/subsurface/examples/getting_started/getting_started.py:56: SettingWithCopyWarning: 
    A value is trying to be set on a copy of a slice from a DataFrame.
    Try using .loc[row_indexer,col_indexer] = value instead

    See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
      wells_fixed['md'] = wells_fixed['top']


.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>Unnamed: 0</th>
          <th>Unnamed: 0.1</th>
          <th>Unnamed: 0.1.1</th>
          <th>Index</th>
          <th>X</th>
          <th>Y</th>
          <th>Z</th>
          <th>Altitude</th>
          <th>Depth</th>
          <th>formation</th>
          <th>base</th>
          <th>top</th>
          <th>_top_abs</th>
          <th>md</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>GD0001</td>
          <td>32428405.75</td>
          <td>5784686.57</td>
          <td>131.8</td>
          <td>132.0</td>
          <td>59.0</td>
          <td>Quaternary</td>
          <td>0.2</td>
          <td>0.0</td>
          <td>132.0</td>
          <td>0.0</td>
        </tr>
        <tr>
          <th>1</th>
          <td>1</td>
          <td>1</td>
          <td>1</td>
          <td>GD0001</td>
          <td>32428405.75</td>
          <td>5784686.57</td>
          <td>119.2</td>
          <td>132.0</td>
          <td>59.0</td>
          <td>MittlererBuntsandsteinGP</td>
          <td>12.8</td>
          <td>0.2</td>
          <td>132.2</td>
          <td>0.2</td>
        </tr>
        <tr>
          <th>2</th>
          <td>2</td>
          <td>2</td>
          <td>2</td>
          <td>GD0001</td>
          <td>32428405.75</td>
          <td>5784686.57</td>
          <td>86.8</td>
          <td>132.0</td>
          <td>59.0</td>
          <td>Zechstein</td>
          <td>45.2</td>
          <td>12.8</td>
          <td>144.8</td>
          <td>12.8</td>
        </tr>
        <tr>
          <th>3</th>
          <td>3</td>
          <td>3</td>
          <td>3</td>
          <td>GD0001</td>
          <td>32428405.75</td>
          <td>5784686.57</td>
          <td>84.0</td>
          <td>132.0</td>
          <td>59.0</td>
          <td>UntererKeuperGP</td>
          <td>48.0</td>
          <td>45.2</td>
          <td>177.2</td>
          <td>45.2</td>
        </tr>
        <tr>
          <th>4</th>
          <td>4</td>
          <td>4</td>
          <td>4</td>
          <td>GD0001</td>
          <td>32428405.75</td>
          <td>5784686.57</td>
          <td>73.0</td>
          <td>132.0</td>
          <td>59.0</td>
          <td>UnterJura</td>
          <td>59.0</td>
          <td>48.0</td>
          <td>180.0</td>
          <td>48.0</td>
        </tr>
        <tr>
          <th>...</th>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
        </tr>
        <tr>
          <th>2793</th>
          <td>2793</td>
          <td>2793</td>
          <td>2860</td>
          <td>GD1145</td>
          <td>32416535.22</td>
          <td>5771551.96</td>
          <td>-1910.0</td>
          <td>50.0</td>
          <td>2007.0</td>
          <td>BochumFM</td>
          <td>1960.0</td>
          <td>1810.0</td>
          <td>1860.0</td>
          <td>1810.0</td>
        </tr>
        <tr>
          <th>2794</th>
          <td>2794</td>
          <td>2794</td>
          <td>2861</td>
          <td>GD1145</td>
          <td>32416535.22</td>
          <td>5771551.96</td>
          <td>-1957.0</td>
          <td>50.0</td>
          <td>2007.0</td>
          <td>Carboniferous</td>
          <td>2007.0</td>
          <td>1960.0</td>
          <td>2010.0</td>
          <td>1960.0</td>
        </tr>
        <tr>
          <th>2795</th>
          <td>2795</td>
          <td>2795</td>
          <td>2862</td>
          <td>GD1146</td>
          <td>32407713.16</td>
          <td>5742143.75</td>
          <td>59.5</td>
          <td>60.0</td>
          <td>1135.0</td>
          <td>Quaternary</td>
          <td>0.5</td>
          <td>0.0</td>
          <td>60.0</td>
          <td>0.0</td>
        </tr>
        <tr>
          <th>2796</th>
          <td>2796</td>
          <td>2796</td>
          <td>2863</td>
          <td>GD1146</td>
          <td>32407713.16</td>
          <td>5742143.75</td>
          <td>-865.0</td>
          <td>60.0</td>
          <td>1135.0</td>
          <td>UnterSantonium</td>
          <td>925.0</td>
          <td>0.5</td>
          <td>60.5</td>
          <td>0.5</td>
        </tr>
        <tr>
          <th>2797</th>
          <td>2797</td>
          <td>2797</td>
          <td>2864</td>
          <td>GD1146</td>
          <td>32407713.16</td>
          <td>5742143.75</td>
          <td>-1075.0</td>
          <td>60.0</td>
          <td>1135.0</td>
          <td>UnterTuronium</td>
          <td>1135.0</td>
          <td>925.0</td>
          <td>985.0</td>
          <td>925.0</td>
        </tr>
      </tbody>
    </table>
    <p>2787 rows Ã— 14 columns</p>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 61-62

Now we can read the csv files into subsurface.UnstructuredData

.. GENERATED FROM PYTHON SOURCE LINES 64-88

.. code-block:: python3

    wells_unstructured_data = ss.io.read_wells_to_unstruct(
        collar_file=data_path + '/wells.csv',
        read_collar_kwargs={
            'usecols': ['Index', 'X', 'Y', 'Altitude'],
            'header': 0
        },
        survey_file=data_path + '/wells.csv',
        read_survey_kwargs={
            'index_col': 'Index',
            'usecols': ['Index', 'md']  # if incl and azi not given -> well vertical
        },
        lith_file=data_path + '/wells.csv',
        read_lith_kwargs={
            'index_col': 'Index',
            'usecols': ['Index', 'top', 'base', 'formation'],
            'columns_map': {'top': 'top',
                            'base': 'base',
                            'formation': 'component lith',
                            }
        }

    )






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/runner/work/subsurface/subsurface/subsurface/io/wells/well_files_reader.py:125: UserWarning: inc and/or azi columns are not present in the file. The boreholes will be straight.
      warnings.warn('inc and/or azi columns are not present in the file.'
    The following striplog failed being processed:  ['GD0041', 'GD0080', 'GD0092', 'GD0136', 'GD0211', 'GD0225', 'GD0235', 'GD0236', 'GD0304', 'GD0305', 'GD0308', 'GD0377', 'GD0399', 'GD0419', 'GD0439', 'GD0464', 'GD0487', 'GD0504', 'GD0505', 'GD0526', 'GD0529', 'GD0573', 'GD0597', 'GD0611', 'GD0617', 'GD0622', 'GD0632', 'GD0715', 'GD0733', 'GD0760', 'GD0766', 'GD0813', 'GD0816', 'GD0843', 'GD0845', 'GD0858', 'GD0937', 'GD0942', 'GD0948', 'GD0981', 'GD1007', 'GD1016']
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0399
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0845
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0942
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0843
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0505
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0981
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0948
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0225
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0760
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD1007
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0464
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0211
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0622
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0526
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0504
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0617
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0439
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0573
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0766
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0611
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD1016
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0937
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0632
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0304
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0858
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0092
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0136
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0419
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0080
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0733
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0236
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0529
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0305
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0816
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0308
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0041
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0235
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0377
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0597
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0715
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0487
      'assigned a survey. Borehole name: ' + w.name)
    /home/runner/work/subsurface/subsurface/subsurface/io/wells/welly_reader.py:251: UserWarning: At least one of the wells do not have assigned a survey. Borehole name: GD0813
      'assigned a survey. Borehole name: ' + w.name)
    The following boreholes failed being processed:  ['GD0399', 'GD0845', 'GD0942', 'GD0843', 'GD0505', 'GD0981', 'GD0948', 'GD0225', 'GD0760', 'GD1007', 'GD0464', 'GD0211', 'GD0622', 'GD0526', 'GD0504', 'GD0617', 'GD0439', 'GD0573', 'GD0766', 'GD0611', 'GD1016', 'GD0937', 'GD0632', 'GD0304', 'GD0858', 'GD0092', 'GD0136', 'GD0419', 'GD0080', 'GD0733', 'GD0236', 'GD0529', 'GD0305', 'GD0816', 'GD0308', 'GD0041', 'GD0235', 'GD0377', 'GD0597', 'GD0715', 'GD0487', 'GD0813', 'GD0399', 'GD0845', 'GD0942', 'GD0843', 'GD0505', 'GD0981', 'GD0948', 'GD0225', 'GD0760', 'GD1007', 'GD0464', 'GD0211', 'GD0622', 'GD0526', 'GD0504', 'GD0617', 'GD0439', 'GD0573', 'GD0766', 'GD0611', 'GD1016', 'GD0937', 'GD0632', 'GD0304', 'GD0858', 'GD0092', 'GD0136', 'GD0419', 'GD0080', 'GD0733', 'GD0236', 'GD0529', 'GD0305', 'GD0816', 'GD0308', 'GD0041', 'GD0235', 'GD0377', 'GD0597', 'GD0715', 'GD0487', 'GD0813']




.. GENERATED FROM PYTHON SOURCE LINES 89-91

.. code-block:: python3

    wells_unstructured_data





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    UnstructuredData()



.. GENERATED FROM PYTHON SOURCE LINES 92-95

From UnstructuredData we can create geometric objects such a lines, points, meshes,
etc. In the case of boreholes `subsurface.LineSet` is the most suitable geometric
representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-99

.. code-block:: python3

    wells_element = ss.LineSet(wells_unstructured_data)








.. GENERATED FROM PYTHON SOURCE LINES 100-102

All elements in subsurface have their direct link to a pyvista mesh. This
transformation can be done by the functions `to_pyvista_...`.

.. GENERATED FROM PYTHON SOURCE LINES 102-113

.. code-block:: python3


    # Pyvista mesh
    wells_mesh = ss.visualization.to_pyvista_line(wells_element, radius=50)

    # Plotting
    ss.visualization.pv_plot(
        [wells_mesh],
        image_2d=False,
        ve=5
    )




.. image:: /getting_started/images/sphx_glr_getting_started_001.png
    :alt: getting started
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(32489956.674495235, 5844982.434495235, 14401.77391532188),
     (32405001.305, 5760027.0649999995, -2589.299983694213),
     (0.0, 0.0, 1.0)]



.. GENERATED FROM PYTHON SOURCE LINES 114-115

We can do the same for point data, for example the borehole location.

.. GENERATED FROM PYTHON SOURCE LINES 117-131

.. code-block:: python3


    # UnstructuredData
    borehole_location_struct = ss.io.borehole_location_to_unstruct(
        collar_file=data_path + '/wells.csv',
        read_collar_kwargs={
            'usecols': ['Index', 'X', 'Y', 'Altitude'],
            'header': 0,
            'columns_map': {
                'X': 'x', 'Y': 'y', 'Altitude': 'altitude'
            }
        }
    )
    borehole_location_struct





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    UnstructuredData()



.. GENERATED FROM PYTHON SOURCE LINES 132-133

Element

.. GENERATED FROM PYTHON SOURCE LINES 133-136

.. code-block:: python3

    borehole_location_point_set = ss.PointSet(borehole_location_struct)
    borehole_location_point_set





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <subsurface.structs.unstructured_elements.PointSet object at 0x7f225c7594d0>



.. GENERATED FROM PYTHON SOURCE LINES 137-138

Pyvista mesh

.. GENERATED FROM PYTHON SOURCE LINES 138-141

.. code-block:: python3

    borehole_loc_mesh = ss.visualization.to_pyvista_points(borehole_location_point_set)
    borehole_loc_mesh






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>
    <table>
    <tr><th>PolyData</th><th>Information</th></tr>
    <tr><td>N Cells</td><td>1144</td></tr>
    <tr><td>N Points</td><td>1144</td></tr>
    <tr><td>X Bounds</td><td>3.238e+07, 3.243e+07</td></tr>
    <tr><td>Y Bounds</td><td>5.735e+06, 5.785e+06</td></tr>
    <tr><td>Z Bounds</td><td>3.500e+01, 2.304e+02</td></tr>
    <tr><td>N Arrays</td><td>1</td></tr>
    </table>

    </td><td>
    <table>
    <tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>
    <tr><td><b>number_segments</b></td><td>Points</td><td>float64</td><td>1</td><td>1.000e+00</td><td>1.900e+01</td></tr>
    </table>

    </td></tr> </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 142-149

.. code-block:: python3

    ss.visualization.pv_plot(
        [borehole_loc_mesh],
        image_2d=False,
        ve=5
    )





.. image:: /getting_started/images/sphx_glr_getting_started_002.png
    :alt: getting started
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(32483769.583143048, 5838795.58314305, 15886.41662555813),
     (32405001.0, 5760027.0, 132.6999969482422),
     (0.0, 0.0, 1.0)]



.. GENERATED FROM PYTHON SOURCE LINES 150-152

Read Topography
---------------

.. GENERATED FROM PYTHON SOURCE LINES 154-158

.. code-block:: python3


    # StructuredData
    topo_structured_data = ss.io.read_structured_topography(data_path + '/DEM50.tif')
    topo_structured_data




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    StructuredData(data=<xarray.Dataset>
    Dimensions:     (x: 2000, y: 2800)
    Coordinates:
      * x           (x) float64 3.25e+07 3.25e+07 3.25e+07 ... 3.236e+07 3.236e+07
      * y           (y) float64 5.7e+06 5.7e+06 5.7e+06 ... 5.8e+06 5.8e+06 5.8e+06
    Data variables:
        topography  (x, y) float32 0.0 0.0 0.0 0.0 0.0 0.0 ... 0.0 0.0 0.0 0.0 0.0)



.. GENERATED FROM PYTHON SOURCE LINES 159-160

Remove outliers

.. GENERATED FROM PYTHON SOURCE LINES 160-170

.. code-block:: python3

    topo_structured_data.replace_outliers('topography', 0.98)

    # Element
    topo_element = ss.structs.StructuredGrid(topo_structured_data)
    topo_element

    # Pyvista mesh
    topo_mesh = ss.visualization.to_pyvista_grid(topo_element, 'topography',
                                                 data_order='C')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray 'topography' (x: 2000, y: 2800)>
    array([[  0.  ,   0.  ,   0.  , ...,  40.1 ,  40.09,  44.58],
           [  0.  ,   0.  ,   0.  , ...,  40.08,  40.07,  44.21],
           [  0.  ,   0.  ,   0.  , ...,  40.14,  44.21,  43.98],
           ...,
           [100.56, 102.14, 102.17, ...,   0.  ,   0.  ,   0.  ],
           [ 99.44,  99.85,  99.77, ...,   0.  ,   0.  ,   0.  ],
           [ 88.32,  91.76,  98.68, ...,   0.  ,   0.  ,   0.  ]],
          dtype=float32)
    Coordinates:
      * x         (x) float64 3.25e+07 3.25e+07 3.25e+07 ... 3.236e+07 3.236e+07
      * y         (y) float64 5.7e+06 5.7e+06 5.7e+06 ... 5.8e+06 5.8e+06 5.8e+06
        quantile  float64 0.98




.. GENERATED FROM PYTHON SOURCE LINES 171-178

.. code-block:: python3

    ss.visualization.pv_plot(
        [topo_mesh],
        image_2d=False,
        ve=5
    )





.. image:: /getting_started/images/sphx_glr_getting_started_003.png
    :alt: getting started
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(32621907.82089342, 5941907.820893423, 38595.81417868456),
     (32430000.0, 5750000.0, 214.25),
     (0.0, 0.0, 1.0)]



.. GENERATED FROM PYTHON SOURCE LINES 179-181

Read Profiles
-------------

.. GENERATED FROM PYTHON SOURCE LINES 183-189

.. code-block:: python3


    profiles_traces = ss.io.profiles.lineset_from_trace(
        data_path + '/Profiles_cropped/Profile_PyVista.shp',
        idx=range(13)
    )








.. GENERATED FROM PYTHON SOURCE LINES 190-212

.. code-block:: python3

    profiles_trisurf_list, profiles_mesh_list = ss.io.profiles.create_tri_surf_from_traces_texture(
        data_path + '/Profiles_cropped/Profile_PyVista.shp',
        path_to_texture=[
            data_path + '/Profiles_cropped/profile001.png',
            data_path + '/Profiles_cropped/profile002.png',
            data_path + '/Profiles_cropped/profile003.png',
            data_path + '/Profiles_cropped/profile004.png',
            data_path + '/Profiles_cropped/profile005.png',
            data_path + '/Profiles_cropped/profile006.png',
            data_path + '/Profiles_cropped/profile007.png',
            data_path + '/Profiles_cropped/profile008.png',
            data_path + '/Profiles_cropped/profile009.png',
            data_path + '/Profiles_cropped/profile010.png',
            data_path + '/Profiles_cropped/profile011.png',
            data_path + '/Profiles_cropped/profile012.png',
            data_path + '/Profiles_cropped/profile013.png',
        ],
        idx=range(13),
        return_mesh=True,
        return_uv=True
    )








.. GENERATED FROM PYTHON SOURCE LINES 213-219

.. code-block:: python3

    ss.visualization.pv_plot(
        profiles_mesh_list,
        image_2d=False,
        ve=5
    )




.. image:: /getting_started/images/sphx_glr_getting_started_004.png
    :alt: getting started
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(32668180.43444929, 6019088.693250661, 46797.056207662594),
     (32411695.153410975, 5762603.412212348, -4500.0),
     (0.0, 0.0, 1.0)]



.. GENERATED FROM PYTHON SOURCE LINES 220-222

GemPy Mesh
----------

.. GENERATED FROM PYTHON SOURCE LINES 224-225

UnstructuredData

.. GENERATED FROM PYTHON SOURCE LINES 225-233

.. code-block:: python3

    gempy_unstructured_data = ss.io.read_unstruct(data_path + '/meshes.nc')

    # Element
    trisurf_gempy = ss.TriSurf(gempy_unstructured_data)

    # Pyvista mesh
    gempy_mesh = ss.visualization.to_pyvista_mesh(trisurf_gempy)








.. GENERATED FROM PYTHON SOURCE LINES 234-241

.. code-block:: python3

    ss.visualization.pv_plot(
        [gempy_mesh],
        image_2d=False,
        ve=5
    )





.. image:: /getting_started/images/sphx_glr_getting_started_005.png
    :alt: getting started
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(32643388.838186417, 5978388.838186416, 45927.767637283105),
     (32410000.0, 5745000.0, -750.0),
     (0.0, 0.0, 1.0)]



.. GENERATED FROM PYTHON SOURCE LINES 242-243

sphinx_gallery_thumbnail_number = 6

.. GENERATED FROM PYTHON SOURCE LINES 246-248

Export to binary
----------------

.. GENERATED FROM PYTHON SOURCE LINES 250-267

.. code-block:: python3

    ss.interfaces.base_structs_to_binary_file(data_path + '/gempy_base',
                                              gempy_unstructured_data)
    ss.interfaces.base_structs_to_binary_file(data_path + '/wells',
                                              wells_unstructured_data)
    ss.interfaces.base_structs_to_binary_file(data_path + '/topo',
                                              topo_structured_data)
    ss.interfaces.base_structs_to_binary_file(data_path + '/collars',
                                              borehole_location_struct)

    for e, tri_surf in enumerate(profiles_trisurf_list):
        ss.interfaces.base_structs_to_binary_file(data_path + f'/profile_{e}_mesh',
                                                  tri_surf.mesh)
        ss.interfaces.base_structs_to_binary_file(
            data_path + f'/profile_{e}_texture_C',
            tri_surf.texture,
            order='C')









.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 3 minutes  35.283 seconds)


.. _sphx_glr_download_getting_started_getting_started.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: getting_started.py <getting_started.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: getting_started.ipynb <getting_started.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
