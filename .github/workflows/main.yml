# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, mig_dev ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    env:
      DISPLAY: ':99.0'
      PYVISTA_OFF_SCREEN: 'True'
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
    - run: |
        PIP_CACHE_PATH=$(pip cache dir)
        echo "##vso[task.setvariable variable=PIP_CACHE_PATH]$PIP_CACHE_PATH"
        PYVISTA_VERSION=$(python -c "import io; exec(io.open('pyvista/_version.py').read()); print(__version__)")
        echo "##vso[task.setvariable variable=PYVISTA_VERSION]$PYVISTA_VERSION"
        displayName: 'Store pip cache path and pyvista version'

    - uses: actions/cache@v2
      inputs:
        key: 'PIP_WHEEL_CACHE | $(Agent.OS) | "$(python.version)" | "$(PYVISTA_VERSION)"'
        path: $(PIP_CACHE_PATH)
      displayName: Cache pip

    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r optional_requirements.txt
    - name: Set up headless disply
      run: |
        git clone --depth 1 git://github.com/pyvista/gl-ci-helpers.git
        source ./gl-ci-helpers/travis/setup_headless_display.sh
    - name: Test with pytest
      run: |
        pip install pytest
        pip install pytest-cov
        pytest
  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r optional_requirements.txt
          pip install -r dev_requirements.txt
          pip install -e .
      - name: Generate Sphinx Docs
        working-directory: docs/
        run: make html

      - name: Publish generated content to GitHub Pages
        uses: tsunematsu21/actions-publish-gh-pages@v1.0.1
        with:
          dir: docs/build/html
          branch: gh-pages
          token: ${{ secrets.ACCESS_TOKEN }}
